plugins {
    id 'idea'
    id 'cz.alenkacz.gradle.scalafmt' version '1.8.0' apply false
    id 'com.linkedin.python' version '0.8.11' apply false
    id 'com.github.arekbee.gradle-R-plugin' version '0.12' apply false
    id 'com.github.johnrengelman.shadow' version '5.0.0' apply false
    id 'com.github.maiflai.scalatest' version '0.25' apply false
}

allprojects {
    repositories {
        jcenter()
        maven { url 'http://dl.bintray.com/spark-packages/maven' }
        maven { url 'http://repo.artima.com/releases' }
    }
}

ext {
    hadoopAws = '2.7.3'
    scalaVersion = '2.11.8'
    sparkDariaVersion = '0.35.2-s_2.12'
    sparkVersion = '3.0.0'
}

subprojects {
    if (name.startsWith('streaming')) {
        apply plugin: 'com.linkedin.python'
        apply plugin: 'com.linkedin.python-sdist'
    }
    if (name.startsWith('transformation')) {
        apply plugin: 'com.github.johnrengelman.shadow'
        apply plugin: 'cz.alenkacz.gradle.scalafmt'
        apply plugin: 'com.github.maiflai.scalatest'
        apply plugin: 'java'
        apply plugin: 'scala'
    }
    if (name.startsWith('aggregation')) {
        apply plugin: 'com.github.arekbee.gradle-R-plugin'
    }

    task copyPythonExec(type: Copy) {
        from file("${project.rootDir}/streaming/src/main/python/JConf/spark_consumer.py")
        into file("/opt/spark/examples/streaming")
        from file("${project.rootDir}/streaming/src/main/python/JConf/twitter_producer.py")
        into file("/opt/spark/examples/streaming")
    }

    task copyRExec(type: Copy) {
        from file("${project.rootDir}/aggregation/src/main/R/JConf/aggregator.R")
        into file("/opt/spark/examples/aggregation")
    }

    task copyScalaExec(type: Copy) {
        from file("${project.rootDir}/transformation/build/libs/transformation-1.0-SNAPSHOT-all.jar")
        into file("/opt/spark/examples/transformation")
    }
}

